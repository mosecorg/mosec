name: PyPI Publish

on:
  release:
    types: [created]

concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: true

jobs:
  lint:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v4
        with:
          python-version: 3.8
      - uses: ./.github/actions/cache
      - name: Install dependencies
        run: make install
      - name: install node for pyright
        uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: install pyright
        run: npm install -g pyright
      - name: Lint
        run: make lint

  test:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 20
    strategy:
      max-parallel: 10
      matrix:
        python-version: [3.7, 3.8, 3.9, "3.10", "3.11"]
        os: [ubuntu-latest , macos-latest]

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - uses: ./.github/actions/cache
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .[dev,plugin]
          make dev
      - name: Test
        run: make test
      - name: Test pyarrow in Linux
        if: ${{ startsWith(matrix.os, 'ubuntu') }}
        run: make test_arrow

  build:
    name: "Build PyPI Package"
    runs-on: ${{ matrix.os }}
    timeout-minutes: 60
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: ./.github/actions/cache
      - name: Build
        run: |
          pipx run cibuildwheel
      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels_${{ github.event.release.tag_name }}
          retention-days: 1
          path: ./wheelhouse/*.whl

  publish:
    name: "Publish PyPI Package"
    runs-on: ubuntu-latest
    needs: [lint,test,build]
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: wheels_${{ github.event.release.tag_name }}
      - uses: actions/setup-python@v4
        with:
          python-version: 3.9
      - name: Publish PyPI
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel twine
          ls
          twine upload *
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: ./.github/actions/cache
      - name: Publish Crates
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
          CRATES_TOKEN: ${{ secrets.CRATES_TOKEN }}
        run: |
          cargo login $CRATES_TOKEN
          cargo publish
          python setup.py sdist
          twine upload --skip-existing dist/*
